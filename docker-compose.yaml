services:
  postgres:
    image: postgres
    command: -p $POSTGRES_PORT
    ports:
      - $POSTGRES_PORT:$POSTGRES_PORT
    environment:
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_DB=$POSTGRES_DB
    networks:
      - integrations
    restart: always
    volumes:
      - postgres-storage:/var/lib/postgresql/data

  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:latest
    ports:
      - 9187:9187
    environment:
      - DATA_SOURCE_NAME=postgresql://$POSTGRES_USER:$POSTGRES_PASSWORD@postgres:$POSTGRES_PORT/$POSTGRES_DB?sslmode=disable
    networks:
      - integrations
    restart: always

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
      - "15692:15692"
    environment:
      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbitmq_management prometheus_metrics
    volumes:
      - rabbitmq-storage:/var/lib/rabbitmq
    restart: always
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "check_port_connectivity" ]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - integrations

  minio:
    image: minio/minio:latest
    ports:
      - 9000:9000
      - 9001:9001
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
      MINIO_PROMETHEUS_AUTH_TYPE: "public"
    volumes:
      - minio-storage:/data
    command: server /data --console-address ":9001"
    networks:
      - integrations
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3
    restart: always

volumes:
  postgres-storage:
  rabbitmq-storage:
  minio-storage:


networks:
  integrations:
